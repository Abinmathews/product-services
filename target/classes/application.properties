spring.application.name=product-service

#spring.datasource.url=jdbc:mysql://localhost:3306/products
#spring.datasource.username=root
#spring.datasource.password=password

spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/products
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:password}

## Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect


security.jwt.secret-key=0d8402b55867d3509af903b88251a18e4ac7a7df8e9c8feca38875faf2c842ff
# 1h in millisecond
security.jwt.expiration-time=3600000


#docker run -p 3307:3306 --name <MYSQL CONTAINER NAME> -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=products mysql:<mysqlversion> - create mysql imaage
#docker network connect <network-name> <> - create network
#docker build -t <app-name> .   - build command
#docker network inspect <network name> - list down the network config
#docker run -p 8005:8088 --name <appname container> --net <network name> -e MYSQL_HOST=mysqldb -e MYSQL_USER=root -e MYSQL_PASSWORD=password -e MYSQL_PORT=3306 <appname container> - merging the app and mysql to run in a single network

#https://www.youtube.com/watch?v=U2GCM0GBzNI&t=901s - youtube link for the setup